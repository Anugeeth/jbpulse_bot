/**
 * Beckn ODR API Specification
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Fee from './Fee';
import FulfillmentState from './FulfillmentState';
import MediaFile from './MediaFile';
import Time from './Time';
import XInput from './XInput';

/**
 * The CancellationTerm model module.
 * @module model/CancellationTerm
 * @version 1.1.0
 */
class CancellationTerm {
    /**
     * Constructs a new <code>CancellationTerm</code>.
     * Describes the cancellation terms of an item or an order. This can be referenced at an item or order level. Item-level cancellation terms can override the terms at the order level.
     * @alias module:model/CancellationTerm
     */
    constructor() { 
        
        CancellationTerm.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CancellationTerm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CancellationTerm} obj Optional instance to populate.
     * @return {module:model/CancellationTerm} The populated <code>CancellationTerm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CancellationTerm();

            if (data.hasOwnProperty('fulfillment_state')) {
                obj['fulfillment_state'] = ApiClient.convertToType(data['fulfillment_state'], FulfillmentState);
            }
            if (data.hasOwnProperty('reason_required')) {
                obj['reason_required'] = ApiClient.convertToType(data['reason_required'], 'Boolean');
            }
            if (data.hasOwnProperty('cancel_by')) {
                obj['cancel_by'] = ApiClient.convertToType(data['cancel_by'], Time);
            }
            if (data.hasOwnProperty('cancellation_fee')) {
                obj['cancellation_fee'] = Fee.constructFromObject(data['cancellation_fee']);
            }
            if (data.hasOwnProperty('xinput')) {
                obj['xinput'] = XInput.constructFromObject(data['xinput']);
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = MediaFile.constructFromObject(data['external_ref']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CancellationTerm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CancellationTerm</code>.
     */
    static validateJSON(data) {
        // validate the optional field `fulfillment_state`
        if (data['fulfillment_state']) { // data not null
          FulfillmentState.validateJSON(data['fulfillment_state']);
        }
        // validate the optional field `cancel_by`
        if (data['cancel_by']) { // data not null
          Time.validateJSON(data['cancel_by']);
        }
        // validate the optional field `cancellation_fee`
        if (data['cancellation_fee']) { // data not null
          Fee.validateJSON(data['cancellation_fee']);
        }
        // validate the optional field `xinput`
        if (data['xinput']) { // data not null
          XInput.validateJSON(data['xinput']);
        }
        // validate the optional field `external_ref`
        if (data['external_ref']) { // data not null
          MediaFile.validateJSON(data['external_ref']);
        }

        return true;
    }


}



/**
 * @member {module:model/FulfillmentState} fulfillment_state
 */
CancellationTerm.prototype['fulfillment_state'] = undefined;

/**
 * Indicates whether a reason is required to cancel the order
 * @member {Boolean} reason_required
 */
CancellationTerm.prototype['reason_required'] = undefined;

/**
 * @member {module:model/Time} cancel_by
 */
CancellationTerm.prototype['cancel_by'] = undefined;

/**
 * @member {module:model/Fee} cancellation_fee
 */
CancellationTerm.prototype['cancellation_fee'] = undefined;

/**
 * @member {module:model/XInput} xinput
 */
CancellationTerm.prototype['xinput'] = undefined;

/**
 * @member {module:model/MediaFile} external_ref
 */
CancellationTerm.prototype['external_ref'] = undefined;






export default CancellationTerm;

