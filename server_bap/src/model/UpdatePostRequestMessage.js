/**
 * Beckn ODR API Specification
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Order from './Order';

/**
 * The UpdatePostRequestMessage model module.
 * @module model/UpdatePostRequestMessage
 * @version 1.1.0
 */
class UpdatePostRequestMessage {
    /**
     * Constructs a new <code>UpdatePostRequestMessage</code>.
     * @alias module:model/UpdatePostRequestMessage
     * @param updateTarget {String} Comma separated values of order objects being updated. For example: ```\"update_target\":\"item,billing,fulfillment\"```
     * @param order {module:model/Order} 
     */
    constructor(updateTarget, order) { 
        
        UpdatePostRequestMessage.initialize(this, updateTarget, order);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, updateTarget, order) { 
        obj['update_target'] = updateTarget;
        obj['order'] = order;
    }

    /**
     * Constructs a <code>UpdatePostRequestMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePostRequestMessage} obj Optional instance to populate.
     * @return {module:model/UpdatePostRequestMessage} The populated <code>UpdatePostRequestMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePostRequestMessage();

            if (data.hasOwnProperty('update_target')) {
                obj['update_target'] = ApiClient.convertToType(data['update_target'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], Order);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdatePostRequestMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdatePostRequestMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdatePostRequestMessage.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['update_target'] && !(typeof data['update_target'] === 'string' || data['update_target'] instanceof String)) {
            throw new Error("Expected the field `update_target` to be a primitive type in the JSON string but got " + data['update_target']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          Order.validateJSON(data['order']);
        }

        return true;
    }


}

UpdatePostRequestMessage.RequiredProperties = ["update_target", "order"];

/**
 * Comma separated values of order objects being updated. For example: ```\"update_target\":\"item,billing,fulfillment\"```
 * @member {String} update_target
 */
UpdatePostRequestMessage.prototype['update_target'] = undefined;

/**
 * @member {module:model/Order} order
 */
UpdatePostRequestMessage.prototype['order'] = undefined;






export default UpdatePostRequestMessage;

