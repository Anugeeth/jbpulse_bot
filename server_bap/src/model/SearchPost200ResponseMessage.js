/**
 * Beckn ODR API Specification
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchPost200ResponseMessageAck from './SearchPost200ResponseMessageAck';

/**
 * The SearchPost200ResponseMessage model module.
 * @module model/SearchPost200ResponseMessage
 * @version 1.1.0
 */
class SearchPost200ResponseMessage {
    /**
     * Constructs a new <code>SearchPost200ResponseMessage</code>.
     * @alias module:model/SearchPost200ResponseMessage
     * @param ack {module:model/SearchPost200ResponseMessageAck} 
     */
    constructor(ack) { 
        
        SearchPost200ResponseMessage.initialize(this, ack);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ack) { 
        obj['ack'] = ack;
    }

    /**
     * Constructs a <code>SearchPost200ResponseMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchPost200ResponseMessage} obj Optional instance to populate.
     * @return {module:model/SearchPost200ResponseMessage} The populated <code>SearchPost200ResponseMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchPost200ResponseMessage();

            if (data.hasOwnProperty('ack')) {
                obj['ack'] = SearchPost200ResponseMessageAck.constructFromObject(data['ack']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchPost200ResponseMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchPost200ResponseMessage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchPost200ResponseMessage.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ack`
        if (data['ack']) { // data not null
          SearchPost200ResponseMessageAck.validateJSON(data['ack']);
        }

        return true;
    }


}

SearchPost200ResponseMessage.RequiredProperties = ["ack"];

/**
 * @member {module:model/SearchPost200ResponseMessageAck} ack
 */
SearchPost200ResponseMessage.prototype['ack'] = undefined;






export default SearchPost200ResponseMessage;

