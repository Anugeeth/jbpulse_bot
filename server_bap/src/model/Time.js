/**
 * Beckn ODR API Specification
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Schedule from './Schedule';
import TimeRange from './TimeRange';

/**
 * The Time model module.
 * @module model/Time
 * @version 1.1.0
 */
class Time {
    /**
     * Constructs a new <code>Time</code>.
     * Describes time in its various forms. It can be a single point in time; duration; or a structured timetable of operations&lt;br&gt;This has properties like label, time stamp,duration,range, days, schedule
     * @alias module:model/Time
     */
    constructor() { 
        
        Time.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Time</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Time} obj Optional instance to populate.
     * @return {module:model/Time} The populated <code>Time</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Time();

            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = TimeRange.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('days')) {
                obj['days'] = ApiClient.convertToType(data['days'], 'String');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = Schedule.constructFromObject(data['schedule']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Time</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Time</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // validate the optional field `range`
        if (data['range']) { // data not null
          TimeRange.validateJSON(data['range']);
        }
        // ensure the json data is a string
        if (data['days'] && !(typeof data['days'] === 'string' || data['days'] instanceof String)) {
            throw new Error("Expected the field `days` to be a primitive type in the JSON string but got " + data['days']);
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          Schedule.validateJSON(data['schedule']);
        }

        return true;
    }


}



/**
 * @member {String} label
 */
Time.prototype['label'] = undefined;

/**
 * @member {Date} timestamp
 */
Time.prototype['timestamp'] = undefined;

/**
 * Describes duration as per ISO8601 format
 * @member {String} duration
 */
Time.prototype['duration'] = undefined;

/**
 * @member {module:model/TimeRange} range
 */
Time.prototype['range'] = undefined;

/**
 * comma separated values representing days of the week
 * @member {String} days
 */
Time.prototype['days'] = undefined;

/**
 * @member {module:model/Schedule} schedule
 */
Time.prototype['schedule'] = undefined;






export default Time;

