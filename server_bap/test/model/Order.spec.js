/**
 * Beckn ODR API Specification
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BecknOdrApiSpecification);
  }
}(this, function(expect, BecknOdrApiSpecification) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BecknOdrApiSpecification.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be.a(BecknOdrApiSpecification.Order);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property refOrderIds (base name: "ref_order_ids")', function() {
      // uncomment below and update the code to test the property refOrderIds
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property provider (base name: "provider")', function() {
      // uncomment below and update the code to test the property provider
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property addOns (base name: "add_ons")', function() {
      // uncomment below and update the code to test the property addOns
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property offers (base name: "offers")', function() {
      // uncomment below and update the code to test the property offers
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property billing (base name: "billing")', function() {
      // uncomment below and update the code to test the property billing
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property fulfillments (base name: "fulfillments")', function() {
      // uncomment below and update the code to test the property fulfillments
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property cancellation (base name: "cancellation")', function() {
      // uncomment below and update the code to test the property cancellation
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property cancellationTerms (base name: "cancellation_terms")', function() {
      // uncomment below and update the code to test the property cancellationTerms
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property refundTerms (base name: "refund_terms")', function() {
      // uncomment below and update the code to test the property refundTerms
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property replacementTerms (base name: "replacement_terms")', function() {
      // uncomment below and update the code to test the property replacementTerms
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property returnTerms (base name: "return_terms")', function() {
      // uncomment below and update the code to test the property returnTerms
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property quote (base name: "quote")', function() {
      // uncomment below and update the code to test the property quote
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property payments (base name: "payments")', function() {
      // uncomment below and update the code to test the property payments
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property xinput (base name: "xinput")', function() {
      // uncomment below and update the code to test the property xinput
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new BecknOdrApiSpecification.Order();
      //expect(instance).to.be();
    });

  });

}));
