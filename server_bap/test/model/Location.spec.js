/**
 * Beckn ODR API Specification
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BecknOdrApiSpecification);
  }
}(this, function(expect, BecknOdrApiSpecification) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BecknOdrApiSpecification.Location();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Location', function() {
    it('should create an instance of Location', function() {
      // uncomment below and update the code to test Location
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be.a(BecknOdrApiSpecification.Location);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property descriptor (base name: "descriptor")', function() {
      // uncomment below and update the code to test the property descriptor
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property mapUrl (base name: "map_url")', function() {
      // uncomment below and update the code to test the property mapUrl
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property gps (base name: "gps")', function() {
      // uncomment below and update the code to test the property gps
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property district (base name: "district")', function() {
      // uncomment below and update the code to test the property district
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property areaCode (base name: "area_code")', function() {
      // uncomment below and update the code to test the property areaCode
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property circle (base name: "circle")', function() {
      // uncomment below and update the code to test the property circle
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property polygon (base name: "polygon")', function() {
      // uncomment below and update the code to test the property polygon
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property _3dspace (base name: "3dspace")', function() {
      // uncomment below and update the code to test the property _3dspace
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

    it('should have the property rating (base name: "rating")', function() {
      // uncomment below and update the code to test the property rating
      //var instance = new BecknOdrApiSpecification.Location();
      //expect(instance).to.be();
    });

  });

}));
