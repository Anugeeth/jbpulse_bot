/**
 * Beckn ODR API Specification
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BecknOdrApiSpecification);
  }
}(this, function(expect, BecknOdrApiSpecification) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BecknOdrApiSpecification.Vehicle();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Vehicle', function() {
    it('should create an instance of Vehicle', function() {
      // uncomment below and update the code to test Vehicle
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be.a(BecknOdrApiSpecification.Vehicle);
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property capacity (base name: "capacity")', function() {
      // uncomment below and update the code to test the property capacity
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property make (base name: "make")', function() {
      // uncomment below and update the code to test the property make
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property variant (base name: "variant")', function() {
      // uncomment below and update the code to test the property variant
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property energyType (base name: "energy_type")', function() {
      // uncomment below and update the code to test the property energyType
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property registration (base name: "registration")', function() {
      // uncomment below and update the code to test the property registration
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property wheelsCount (base name: "wheels_count")', function() {
      // uncomment below and update the code to test the property wheelsCount
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property cargoVolumne (base name: "cargo_volumne")', function() {
      // uncomment below and update the code to test the property cargoVolumne
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property wheelchairAccess (base name: "wheelchair_access")', function() {
      // uncomment below and update the code to test the property wheelchairAccess
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

    it('should have the property emissionStandard (base name: "emission_standard")', function() {
      // uncomment below and update the code to test the property emissionStandard
      //var instance = new BecknOdrApiSpecification.Vehicle();
      //expect(instance).to.be();
    });

  });

}));
