/*
 * Beckn ODR API Specification
 *
 * Adaptation of Beckn protocol for the ODR sector.
 *
 * API version: 1.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi




// Person - Describes a person as any individual
type Person struct {

	// Describes the identity of the person
	Id string `json:"id,omitempty"`

	// Profile url of the person
	Url string `json:"url,omitempty"`

	// the name of the person
	Name string `json:"name,omitempty"`

	Image Image `json:"image,omitempty"`

	// Describes duration as per ISO8601 format
	Age string `json:"age,omitempty"`

	// Date of birth of the person
	Dob string `json:"dob,omitempty"`

	// Gender of something, typically a Person, but possibly also fictional characters, animals, etc. While Male and Female may be used, text strings are also acceptable for people who do not identify as a binary gender.Allowed values for this field can be published in the network policy
	Gender string `json:"gender,omitempty"`

	Creds []Credential `json:"creds,omitempty"`

	Languages []PersonLanguagesInner `json:"languages,omitempty"`

	Skills []PersonSkillsInner `json:"skills,omitempty"`

	Tags []TagGroup `json:"tags,omitempty"`
}

// AssertPersonRequired checks if the required fields are not zero-ed
func AssertPersonRequired(obj Person) error {
	if err := AssertImageRequired(obj.Image); err != nil {
		return err
	}
	for _, el := range obj.Creds {
		if err := AssertCredentialRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Languages {
		if err := AssertPersonLanguagesInnerRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Skills {
		if err := AssertPersonSkillsInnerRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Tags {
		if err := AssertTagGroupRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertPersonConstraints checks if the values respects the defined constraints
func AssertPersonConstraints(obj Person) error {
	return nil
}
